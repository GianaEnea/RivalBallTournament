@startuml
actor Player
boundary Client
control Server
entity Ball
entity Paddle
entity Brick
entity PowerUp 
control Game

Player -> Client: Start Game
activate Client

Player -> Server: Move Paddle
activate Server

Server -> Paddle: move(mouseX)
activate Paddle
Paddle --> Server: getX(), getY(), getBounds()

Server -> Ball: move()
activate Ball
Ball --> Server: getX(), getY(), getBounds(), getOwner()
Server --> Paddle: checkCollision()

Server -> Brick: checkCollision()
activate Brick
Brick --> Server: getX(), getY(), getBounds(), getHp()
deactivate Brick

Server -> PowerUp: fall()
activate PowerUp
PowerUp --> Server: getX(), getY(), getSpownedBy()
deactivate PowerUp

Server --> Game: Update Game State
activate Game
Game -> Ball: drawBall()
activate Ball
Ball --> Paddle: checkCollision()
Paddle -> Game: drawPaddle()
Game -> Brick: drawBricks()
activate Brick
Brick --> Server: updateHp()
deactivate Brick
Game -> PowerUp: drawPowerUps()
activate PowerUp
PowerUp --> Server: applyPowerUp()
deactivate PowerUp
Game -> Client: Display Updated Game
deactivate Game
deactivate Server
deactivate Paddle
deactivate Ball
deactivate Brick
deactivate Client
@enduml